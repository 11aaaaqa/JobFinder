@using System.Text.Json
@using Web.MVC.Constants.Resume
@model Web.MVC.DTOs.Resume.AddResumeDto
<link rel="stylesheet" href="~/css/resume/add-resume.css"/>
<link rel="stylesheet" href="~/css/site-themed-textarea.css"/>

<form method="post">
    <div asp-validation-summary="ModelOnly"></div>
    
    <span asp-validation-for="ResumeTitle"></span>
    <span asp-validation-for="OccupationTypes"></span>
    <span asp-validation-for="WorkTypes"></span>
    <span asp-validation-for="Name"></span>
    <span asp-validation-for="Surname"></span>
    <span asp-validation-for="Patronymic"></span>
    <span asp-validation-for="Gender"></span>
    <span asp-validation-for="DateOfBirth"></span>
    <span asp-validation-for="City"></span>
    <span asp-validation-for="ReadyToMove"></span>
    <span asp-validation-for="PhoneNumber"></span>
    <span asp-validation-for="Email"></span>
    <span asp-validation-for="AboutMe"></span>
    <span asp-validation-for="DesiredSalary"></span>
    <span asp-validation-for="Educations"></span>
    <span asp-validation-for="EmployeeExperience"></span>
    <span asp-validation-for="ForeignLanguages"></span>
    
    <input type="hidden" asp-for="Id"/>
    <input type="hidden" asp-for="Status" />
    <input type="hidden" asp-for="EmployeeId" />

    <div class="mb-2">
        <h3>Профессия или должность</h3>
        <input class="input-text" asp-for="ResumeTitle" placeholder="Введите профессию или должность"/>
    </div>
    
    <div class="mb-2">
        <h3>Желаемая зарплата</h3>
        <input class="input-text" asp-for="DesiredSalary" placeholder="Введите зарплату" />
    </div>

    <div class="mb-2">
        <h3>Информация о Вас</h3>
        <div class="mb-1">
            <input class="input-text" asp-for="Name" placeholder="Имя" />
        </div>
        <div class="mb-1">
            <input class="input-text" asp-for="Surname" placeholder="Фамилия" />
        </div>
        <div class="mb-1">
            <input class="input-text" asp-for="Patronymic" placeholder="Отчество" />
        </div>
        <div>
            <input class="input-text" asp-for="DateOfBirth" placeholder="Дата рождения" />
        </div>
    </div>
    
    <div>
        <h3>Ваш пол</h3>
        <p>
            <input type="radio" name="Gender" value="@GenderConstants.Male" />
            @GenderConstants.Male
        </p>
        <p>
            <input type="radio" name="Gender" value="@GenderConstants.Female" />
            @GenderConstants.Female
        </p>
    </div>
    
    <div>
        <h3>Тип работы</h3>
        <p>
            <input type="checkbox" name="WorkTypes" value="@WorkTypesConstants.OfficeWork"/>
            @WorkTypesConstants.OfficeWork
        </p>
        <p>
            <input type="checkbox" name="WorkTypes" value="@WorkTypesConstants.RemoteWork" />
            @WorkTypesConstants.RemoteWork
        </p>
        <p>
            <input type="checkbox" name="WorkTypes" value="@WorkTypesConstants.HybridWork" />
            @WorkTypesConstants.HybridWork
        </p>
        
        <div class="mb-2">
            <p>
                <input type="checkbox" asp-for="ReadyToMove" />
                Готов к переезду
            </p>
        </div>
    </div>
    
    <div>
        <h3>Тип занятости</h3>
        <p>
            <input type="checkbox" name="OccupationTypes" value="@OccupationTypesConstants.FullTimeJob" />
            @OccupationTypesConstants.FullTimeJob
        </p>
        <p>
            <input type="checkbox" name="OccupationTypes" value="@OccupationTypesConstants.PartTimeJob" />
            @OccupationTypesConstants.PartTimeJob
        </p>
    </div>

    <div class="mb-2">
        <h3>Где ищите работу</h3>
        <input class="input-text" asp-for="City" placeholder="Введите город работы" />
    </div>
    
    <div class="mb-2">
        <h3>О себе</h3>
        <textarea class="textarea" asp-for="AboutMe" placeholder="Любая дополнительная информация" oninput="autoResize(this)" rows="4"></textarea>
    </div>
    
    <div class="mb-2">
        <h3>Контактная информация</h3>
        <div class="mb-1">
            <input class="input-text" asp-for="PhoneNumber" placeholder="Номер телефона" />
        </div>
        <div>
            <input class="input-text" asp-for="Email" placeholder="Почта" />
        </div>
    </div>
    
    <div class="mb-1">
        <div class="eel-title-btn-block mb-1">
            <h3>Образование</h3>
            <button type="button" class="add-btn" id="add-education" onclick="addEducation()">+ Добавить</button>
        </div>
        <div id="education-container" class="education-container"></div>
    </div>
    
    <div class="mb-1">
        <div class="eel-title-btn-block mb-1">
            <h3>Опыт работы</h3>
            <button type="button" class="add-btn" id="add-experience" onclick="addExperience()">+ Добавить</button>
        </div>
        <div id="experience-container" class="experience-container"></div>
    </div>

    <div class="mb-1">
        <div class="eel-title-btn-block mb-1">
            <h3>Иностранные языки</h3>
            <button type="button" class="add-btn" id="add-language" onclick="addLanguage()">+ Добавить</button>
        </div>
        <div id="language-container" class="language-container"></div>
    </div>

    <input type="submit" value="Создать"/>
</form>

<script>
    let educationIndex = 0;
    let employeeExperienceIndex = 0;
    let languageIndex = 0;

    function addLanguage() {
        const container = document.getElementById('language-container');
        const div = document.createElement('div');
        div.className = 'language-element-block';

        const languageNameDiv = document.createElement('div');
        languageNameDiv.classList.add('mb-2');
        const languageNameTitle = document.createElement('h4');
        languageNameTitle.textContent = 'Язык';
        const languageNameInput = document.createElement('input');
        languageNameInput.classList.add('input-text');
        languageNameInput.required = true;
        languageNameInput.type = 'text';
        languageNameInput.name = `ForeignLanguages[${languageIndex}].LanguageName`;
        languageNameInput.placeholder = 'Введите язык';
        languageNameDiv.appendChild(languageNameTitle);
        languageNameDiv.appendChild(languageNameInput);

        const proficiencyLevelDiv = document.createElement('div');
        const proficiencyLevelTitle = document.createElement('h4');
        proficiencyLevelTitle.textContent = 'Уровень владения';

        const proficiencyLevelParagraph1 = document.createElement('p');
        const proficiencyLevelRadio1 = document.createElement('input');
        proficiencyLevelRadio1.required = true;
        proficiencyLevelRadio1.type = 'radio';
        proficiencyLevelRadio1.value = @Html.Raw(JsonSerializer.Serialize(LanguageProficiencyLevelConstants.A1));
        proficiencyLevelRadio1.name = `ForeignLanguages[${languageIndex}].LanguageProficiencyLevel`;
        const text1 = document.createTextNode(' ' + @Html.Raw(JsonSerializer.Serialize(LanguageProficiencyLevelConstants.A1)));
        proficiencyLevelParagraph1.appendChild(proficiencyLevelRadio1);
        proficiencyLevelParagraph1.appendChild(text1);

        const proficiencyLevelParagraph2 = document.createElement('p');
        const proficiencyLevelRadio2 = document.createElement('input');
        proficiencyLevelRadio2.required = true;
        proficiencyLevelRadio2.type = 'radio';
        proficiencyLevelRadio2.value = @Html.Raw(JsonSerializer.Serialize(LanguageProficiencyLevelConstants.A2));
        proficiencyLevelRadio2.name = `ForeignLanguages[${languageIndex}].LanguageProficiencyLevel`;
        const text2 = document.createTextNode(' ' + @Html.Raw(JsonSerializer.Serialize(LanguageProficiencyLevelConstants.A2)));
        proficiencyLevelParagraph2.appendChild(proficiencyLevelRadio2);
        proficiencyLevelParagraph2.appendChild(text2);

        const proficiencyLevelParagraph3 = document.createElement('p');
        const proficiencyLevelRadio3 = document.createElement('input');
        proficiencyLevelRadio3.required = true;
        proficiencyLevelRadio3.type = 'radio';
        proficiencyLevelRadio3.value = @Html.Raw(JsonSerializer.Serialize(LanguageProficiencyLevelConstants.B1));
        proficiencyLevelRadio3.name = `ForeignLanguages[${languageIndex}].LanguageProficiencyLevel`;
        const text3 = document.createTextNode(' ' + @Html.Raw(JsonSerializer.Serialize(LanguageProficiencyLevelConstants.B1)));
        proficiencyLevelParagraph3.appendChild(proficiencyLevelRadio3);
        proficiencyLevelParagraph3.appendChild(text3);

        const proficiencyLevelParagraph4 = document.createElement('p');
        const proficiencyLevelRadio4 = document.createElement('input');
        proficiencyLevelRadio4.required = true;
        proficiencyLevelRadio4.type = 'radio';
        proficiencyLevelRadio4.value = @Html.Raw(JsonSerializer.Serialize(LanguageProficiencyLevelConstants.B2));
        proficiencyLevelRadio4.name = `ForeignLanguages[${languageIndex}].LanguageProficiencyLevel`;
        const text4 = document.createTextNode(' ' + @Html.Raw(JsonSerializer.Serialize(LanguageProficiencyLevelConstants.B2)));
        proficiencyLevelParagraph4.appendChild(proficiencyLevelRadio4);
        proficiencyLevelParagraph4.appendChild(text4);

        const proficiencyLevelParagraph5 = document.createElement('p');
        const proficiencyLevelRadio5 = document.createElement('input');
        proficiencyLevelRadio5.required = true;
        proficiencyLevelRadio5.type = 'radio';
        proficiencyLevelRadio5.value = @Html.Raw(JsonSerializer.Serialize(LanguageProficiencyLevelConstants.C1));
        proficiencyLevelRadio5.name = `ForeignLanguages[${languageIndex}].LanguageProficiencyLevel`;
        const text5 = document.createTextNode(' ' + @Html.Raw(JsonSerializer.Serialize(LanguageProficiencyLevelConstants.C1)));
        proficiencyLevelParagraph5.appendChild(proficiencyLevelRadio5);
        proficiencyLevelParagraph5.appendChild(text5);

        const proficiencyLevelParagraph6 = document.createElement('p');
        const proficiencyLevelRadio6 = document.createElement('input');
        proficiencyLevelRadio6.required = true;
        proficiencyLevelRadio6.type = 'radio';
        proficiencyLevelRadio6.value = @Html.Raw(JsonSerializer.Serialize(LanguageProficiencyLevelConstants.C2));
        proficiencyLevelRadio6.name = `ForeignLanguages[${languageIndex}].LanguageProficiencyLevel`;
        const text6 = document.createTextNode(' ' + @Html.Raw(JsonSerializer.Serialize(LanguageProficiencyLevelConstants.C2)));
        proficiencyLevelParagraph6.appendChild(proficiencyLevelRadio6);
        proficiencyLevelParagraph6.appendChild(text6);

        proficiencyLevelDiv.appendChild(proficiencyLevelTitle);
        proficiencyLevelDiv.appendChild(proficiencyLevelParagraph1);
        proficiencyLevelDiv.appendChild(proficiencyLevelParagraph2);
        proficiencyLevelDiv.appendChild(proficiencyLevelParagraph3);
        proficiencyLevelDiv.appendChild(proficiencyLevelParagraph4);
        proficiencyLevelDiv.appendChild(proficiencyLevelParagraph5);
        proficiencyLevelDiv.appendChild(proficiencyLevelParagraph6);

        const removeBtn = document.createElement('button');
        removeBtn.classList.add('delete-btn');
        removeBtn.innerText = 'Удалить';
        removeBtn.onclick = function() {
            container.removeChild(div);
            languageIndex--;
        };

        const resumeIdHiddenInput = document.createElement('input');
        resumeIdHiddenInput.type = 'hidden';
        resumeIdHiddenInput.name = `ForeignLanguages[${languageIndex}].ResumeId`;
        resumeIdHiddenInput.value = @Html.Raw(JsonSerializer.Serialize(ViewBag.ResumeId));
        
        div.appendChild(languageNameDiv);
        div.appendChild(proficiencyLevelDiv);
        div.appendChild(removeBtn);
        div.appendChild(resumeIdHiddenInput);

        container.appendChild(div);

        languageIndex++;
    }

    function addExperience() {
        const container = document.getElementById('experience-container');

        const div = document.createElement('div');
        div.className = 'experience-element-block';

        const companyPostDiv = document.createElement('div');
        companyPostDiv.classList.add('mb-2');
        const companyPostTitle = document.createElement('h4');
        companyPostTitle.textContent = 'Должность';
        const companyPostInput = document.createElement('input');
        companyPostInput.classList.add('input-text');
        companyPostInput.required = true;
        companyPostInput.type = 'text';
        companyPostInput.name = `EmployeeExperience[${employeeExperienceIndex}].CompanyPost`;
        companyPostInput.placeholder = 'Введите должность';
        companyPostDiv.appendChild(companyPostTitle);
        companyPostDiv.appendChild(companyPostInput);

        const companyNameDiv = document.createElement('div');
        companyNameDiv.classList.add('mb-2');
        const companyNameTitle = document.createElement('h4');
        companyNameTitle.textContent = 'Компания';
        const companyNameInput = document.createElement('input');
        companyNameInput.classList.add('input-text');
        companyNameInput.required = true;
        companyNameInput.type = 'text';
        companyNameInput.name = `EmployeeExperience[${employeeExperienceIndex}].CompanyName`;
        companyNameInput.placeholder = 'Введите название компании';
        companyNameDiv.appendChild(companyNameTitle);
        companyNameDiv.appendChild(companyNameInput);

        var date = new Date();
        const year = date.getUTCFullYear();
        const month = String(date.getUTCMonth() + 1).padStart(2, '0');
        const currentDate = `${year}-${month}`;

        const workingFromDiv = document.createElement('div');
        workingFromDiv.classList.add('mb-2');
        const workingFromTitle = document.createElement('h4');
        workingFromTitle.textContent = 'Начало работы';
        const workingFromInput = document.createElement('input');
        workingFromInput.classList.add('input-text');
        workingFromInput.required = true;
        workingFromInput.type = 'month';
        workingFromInput.min = '1950-01';
        workingFromInput.max = currentDate;
        workingFromInput.name = `EmployeeExperience[${employeeExperienceIndex}].WorkingFrom`;
        workingFromDiv.appendChild(workingFromTitle);
        workingFromDiv.appendChild(workingFromInput);

        const workingUntilDiv = document.createElement('div');
        const workingUntilTitle = document.createElement('h4');
        workingUntilTitle.textContent = 'Окончание работы';
        const workingUntilInput = document.createElement('input');
        workingUntilInput.classList.add('input-text');
        workingUntilInput.classList.add('mb-1');
        workingUntilInput.required = true;
        workingUntilInput.type = 'hidden';
        workingUntilInput.min = '1950-01';
        workingUntilInput.max = currentDate;
        workingUntilInput.value = currentDate;
        workingUntilInput.name = `EmployeeExperience[${employeeExperienceIndex}].WorkingUntil`;

        const p = document.createElement('p');
        const currentlyWorkHereCheckbox = document.createElement('input');
        currentlyWorkHereCheckbox.type = 'checkbox';
        currentlyWorkHereCheckbox.checked = true;
        currentlyWorkHereCheckbox.value = true;
        currentlyWorkHereCheckbox.name = `EmployeeExperience[${employeeExperienceIndex}].CurrentlyWorkHere`;
        const text = document.createTextNode('Работаю сейчас');
        p.appendChild(currentlyWorkHereCheckbox);
        p.appendChild(text);
        currentlyWorkHereCheckbox.addEventListener('change', function() {
            if (this.checked) {
                workingUntilInput.value = currentDate;
                workingUntilInput.type = 'hidden';
                currentlyWorkHereCheckbox.value = true;
            } else {
                workingUntilInput.value = '';
                workingUntilInput.type = 'month';
                currentlyWorkHereCheckbox.value = false;
            }
        });

        workingUntilDiv.appendChild(workingUntilTitle);
        workingUntilDiv.appendChild(workingUntilInput);
        workingUntilDiv.appendChild(p);

        workingFromInput.addEventListener('change', function() {
            const [y, m] = this.value.split('-').map(Number);
            const d = new Date(y, m - 1, 1);
            d.setMonth(d.getMonth() + 1);
            const nY = d.getFullYear();
            const nM = d.getMonth() + 1;
            const formattedM = nM < 10 ? '0' + nM : nM;
            workingUntilInput.min = `${nY}-${formattedM}`;
            if (currentlyWorkHereCheckbox.checked !== true) {
                workingUntilInput.value = '';
            }
        });

        const responsibilitiesDiv = document.createElement('div');
        responsibilitiesDiv.classList.add('mb-2');
        const responsibilitiesTitle = document.createElement('h4');
        responsibilitiesTitle.textContent = 'Расскажите о ваших обязанностях';
        const responsibilitiesTextarea = document.createElement('textarea');
        responsibilitiesTextarea.classList.add('textarea');
        responsibilitiesTextarea.rows = 3;
        responsibilitiesTextarea.name = `EmployeeExperience[${employeeExperienceIndex}].Responsibilities`;
        responsibilitiesTextarea.placeholder = 'Расскажите про ваши обязанности';
        responsibilitiesTextarea.addEventListener('input', function() {
            autoResize(this);
        });
        responsibilitiesDiv.appendChild(responsibilitiesTitle);
        responsibilitiesDiv.appendChild(responsibilitiesTextarea);

        const removeBtn = document.createElement('button');
        removeBtn.classList.add('delete-btn');
        removeBtn.innerText = 'Удалить';
        removeBtn.onclick = function() {
            container.removeChild(div);
            employeeExperienceIndex--;
        };

        const resumeIdHiddenInput = document.createElement('input');
        resumeIdHiddenInput.type = 'hidden';
        resumeIdHiddenInput.name = `EmployeeExperience[${employeeExperienceIndex}].ResumeId`;
        resumeIdHiddenInput.value = @Html.Raw(JsonSerializer.Serialize(ViewBag.ResumeId));

        div.appendChild(companyPostDiv);
        div.appendChild(companyNameDiv);
        div.appendChild(workingFromDiv);
        div.appendChild(workingUntilDiv);
        div.appendChild(responsibilitiesDiv);
        div.appendChild(removeBtn);
        div.appendChild(resumeIdHiddenInput);

        container.appendChild(div);

        employeeExperienceIndex++;
    }

    function addEducation() {
        const container = document.getElementById('education-container');

        const div = document.createElement('div');
        div.className = 'education-element-block';


        const educationTypeDiv = document.createElement('div');
        const educationTypeTitle = document.createElement('h4');
        educationTypeTitle.textContent = 'Уровень образования';

        const educationTypeParagraph1 = document.createElement('p');
        const educationTypeRadio1 = document.createElement('input');
        educationTypeRadio1.required = true;
        educationTypeRadio1.type = 'radio';
        educationTypeRadio1.value = @Html.Raw(JsonSerializer.Serialize(EducationTypeConstants.SecondaryEducation));
        educationTypeRadio1.name = `Educations[${educationIndex}].EducationType`;
        const text1 = document.createTextNode(' ' + @Html.Raw(JsonSerializer.Serialize(EducationTypeConstants.SecondaryEducation)));
        educationTypeParagraph1.appendChild(educationTypeRadio1);
        educationTypeParagraph1.appendChild(text1);


        const educationTypeParagraph2 = document.createElement('p');
        const educationTypeRadio2 = document.createElement('input');
        educationTypeRadio2.required = true;
        educationTypeRadio2.type = 'radio';
        educationTypeRadio2.value = @Html.Raw(JsonSerializer.Serialize(EducationTypeConstants.SecondarySpecializedEducation));
        educationTypeRadio2.name = `Educations[${educationIndex}].EducationType`;
        const text2 = document.createTextNode(' ' + @Html.Raw(JsonSerializer.Serialize(EducationTypeConstants.SecondarySpecializedEducation)));
        educationTypeParagraph2.appendChild(educationTypeRadio2);
        educationTypeParagraph2.appendChild(text2);


        const educationTypeParagraph3 = document.createElement('p');
        const educationTypeRadio3 = document.createElement('input');
        educationTypeRadio3.required = true;
        educationTypeRadio3.type = 'radio';
        educationTypeRadio3.value = @Html.Raw(JsonSerializer.Serialize(EducationTypeConstants.HigherEducation));
        educationTypeRadio3.name = `Educations[${educationIndex}].EducationType`;
        const text3 = document.createTextNode(' ' + @Html.Raw(JsonSerializer.Serialize(EducationTypeConstants.HigherEducation)));
        educationTypeParagraph3.appendChild(educationTypeRadio3);
        educationTypeParagraph3.appendChild(text3);

        const educationTypeParagraph4 = document.createElement('p');
        const educationTypeRadio4 = document.createElement('input');
        educationTypeRadio4.required = true;
        educationTypeRadio4.type = 'radio';
        educationTypeRadio4.value = @Html.Raw(JsonSerializer.Serialize(EducationTypeConstants.IncompleteHigherEducation));
        educationTypeRadio4.name = `Educations[${educationIndex}].EducationType`;
        const text4 = document.createTextNode(' ' + @Html.Raw(JsonSerializer.Serialize(EducationTypeConstants.IncompleteHigherEducation)));
        educationTypeParagraph4.appendChild(educationTypeRadio4);
        educationTypeParagraph4.appendChild(text4);
        educationTypeDiv.appendChild(educationTypeTitle);
        educationTypeDiv.appendChild(educationTypeParagraph1);
        educationTypeDiv.appendChild(educationTypeParagraph2);
        educationTypeDiv.appendChild(educationTypeParagraph3);
        educationTypeDiv.appendChild(educationTypeParagraph4);

        const educationalInstitutionDiv = document.createElement('div');
        educationalInstitutionDiv.classList.add('mb-2');
        const educationalInstitutionTitle = document.createElement('h4');
        educationalInstitutionTitle.textContent = 'Образовательное учреждение';
        const educationalInstitutionInput = document.createElement('input');
        educationalInstitutionInput.classList.add('input-text');
        educationalInstitutionInput.type = 'text';
        educationalInstitutionInput.placeholder = 'Введите образовательное учреждение';
        educationalInstitutionInput.name = `Educations[${educationIndex}].EducationalInstitution`;
        educationalInstitutionDiv.appendChild(educationalInstitutionTitle);
        educationalInstitutionDiv.appendChild(educationalInstitutionInput);


        const specializationDiv = document.createElement('div');
        specializationDiv.classList.add('mb-2');
        const specializationTitle = document.createElement('h4');
        specializationTitle.textContent = 'Специализация';
        const specializationInput = document.createElement('input');
        specializationInput.classList.add('input-text');
        specializationInput.type = 'text';
        specializationInput.placeholder = 'Введите специализацию';
        specializationInput.name = `Educations[${educationIndex}].Specialization`;
        specializationDiv.appendChild(specializationTitle);
        specializationDiv.appendChild(specializationInput);

        const removeBtn = document.createElement('button');
        removeBtn.classList.add('delete-btn');
        removeBtn.innerText = 'Удалить';
        removeBtn.onclick = function() {
            container.removeChild(div);
            educationIndex--;
        };

        const resumeIdHiddenInput = document.createElement('input');
        resumeIdHiddenInput.type = 'hidden';
        resumeIdHiddenInput.name = `Educations[${educationIndex}].ResumeId`;
        resumeIdHiddenInput.value = @Html.Raw(JsonSerializer.Serialize(ViewBag.ResumeId));

        div.appendChild(educationTypeDiv);
        div.appendChild(educationalInstitutionDiv);
        div.appendChild(specializationDiv);
        div.appendChild(removeBtn);
        div.appendChild(resumeIdHiddenInput);

        container.appendChild(div);

        educationIndex++;
    }
</script>
<script src="~/js/textarea-resizing.js"></script>