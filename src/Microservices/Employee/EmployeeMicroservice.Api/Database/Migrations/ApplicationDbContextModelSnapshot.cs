// <auto-generated />
using System;
using EmployeeMicroservice.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EmployeeMicroservice.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EmployeeMicroservice.Api.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AboutMe")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<long?>("DesiredSalaryFrom")
                        .HasColumnType("bigint");

                    b.Property<long?>("DesiredSalaryTo")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OccupationType")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("Post")
                        .HasColumnType("text");

                    b.Property<bool>("ReadyToMove")
                        .HasColumnType("boolean");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeeMicroservice.Api.Models.EmployeeSkills.Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EducationForm")
                        .HasColumnType("text");

                    b.Property<string>("EducationType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EducationalInstitution")
                        .HasColumnType("text");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Specialization")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("EmployeeMicroservice.Api.Models.EmployeeSkills.EmployeeExperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyPost")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("CurrentlyWorkHere")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Responsibilities")
                        .HasColumnType("text");

                    b.Property<string>("WorkingFromMonth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkingFromYear")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkingUntilMonth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkingUntilYear")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeExperience");
                });

            modelBuilder.Entity("EmployeeMicroservice.Api.Models.EmployeeSkills.ForeignLanguage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LanguageProficiencyLevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ForeignLanguage");
                });

            modelBuilder.Entity("EmployeeMicroservice.Api.Models.EmployeeSkills.Education", b =>
                {
                    b.HasOne("EmployeeMicroservice.Api.Models.Employee", null)
                        .WithMany("Educations")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("EmployeeMicroservice.Api.Models.EmployeeSkills.EmployeeExperience", b =>
                {
                    b.HasOne("EmployeeMicroservice.Api.Models.Employee", null)
                        .WithMany("EmployeeExperience")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("EmployeeMicroservice.Api.Models.EmployeeSkills.ForeignLanguage", b =>
                {
                    b.HasOne("EmployeeMicroservice.Api.Models.Employee", null)
                        .WithMany("ForeignLanguages")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("EmployeeMicroservice.Api.Models.Employee", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("EmployeeExperience");

                    b.Navigation("ForeignLanguages");
                });
#pragma warning restore 612, 618
        }
    }
}
