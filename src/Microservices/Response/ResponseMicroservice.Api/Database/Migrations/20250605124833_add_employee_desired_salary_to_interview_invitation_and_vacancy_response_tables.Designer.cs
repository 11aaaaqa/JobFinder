// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ResponseMicroservice.Api.Database;

#nullable disable

namespace ResponseMicroservice.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250605124833_add_employee_desired_salary_to_interview_invitation_and_vacancy_response_tables")]
    partial class add_employee_desired_salary_to_interview_invitation_and_vacancy_response_tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ResponseMicroservice.Api.Models.InterviewInvitation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EmployeeCity")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("EmployeeDateOfBirth")
                        .HasColumnType("date");

                    b.Property<long?>("EmployeeDesiredSalary")
                        .HasColumnType("bigint");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("EmployeeResumeId")
                        .HasColumnType("uuid");

                    b.Property<string>("EmployeeSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("EmployeeWorkingExperience")
                        .HasColumnType("interval");

                    b.Property<DateTime>("InvitationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("InvitedCompanyId")
                        .HasColumnType("uuid");

                    b.Property<string>("VacancyCity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VacancyCompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VacancyId")
                        .HasColumnType("uuid");

                    b.Property<string>("VacancyPosition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("VacancySalaryFrom")
                        .HasColumnType("integer");

                    b.Property<int?>("VacancySalaryTo")
                        .HasColumnType("integer");

                    b.Property<string>("VacancyWorkExperience")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("InterviewInvitations");
                });

            modelBuilder.Entity("ResponseMicroservice.Api.Models.VacancyResponse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EmployeeCity")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("EmployeeDateOfBirth")
                        .HasColumnType("date");

                    b.Property<long?>("EmployeeDesiredSalary")
                        .HasColumnType("bigint");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmployeeSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("EmployeeWorkingExperience")
                        .HasColumnType("interval");

                    b.Property<Guid>("RespondedEmployeeResumeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ResponseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ResponseStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VacancyCity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VacancyCompanyId")
                        .HasColumnType("uuid");

                    b.Property<string>("VacancyCompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VacancyId")
                        .HasColumnType("uuid");

                    b.Property<string>("VacancyPosition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("VacancySalaryFrom")
                        .HasColumnType("integer");

                    b.Property<int?>("VacancySalaryTo")
                        .HasColumnType("integer");

                    b.Property<string>("VacancyWorkExperience")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("VacancyResponses");
                });
#pragma warning restore 612, 618
        }
    }
}
