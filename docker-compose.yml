services:
  web-mvc:
    container_name: web-mvc
    image: ${DOCKER_REGISTRY-}web-mvc
    build:
      context: .
      dockerfile: src/Web/Web.MVC/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - 35121:8080

  gateway-api:
    container_name: gateway-api
    image: ${DOCKER_REGISTRY-}gateway-api
    build:
      context: .
      dockerfile: src/Gateway/Gateway.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - 35122:8080

  account-microservice-api:
    container_name: account-microservice-api
    image: ${DOCKER_REGISTRY-}accountmicroservice-api
    build:
      context: .
      dockerfile: src/Microservices/Account/AccountMicroservice.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - 35123:8080
    depends_on:
       postgres-account:
         condition: service_started
       gateway-api:
         condition: service_started
       kafka:
         condition: service_started

  bookmark-microservice-api:
    container_name: bookmark-microservice-api
    image: ${DOCKER_REGISTRY-}bookmarkmicroservice-api
    build:
      context: .
      dockerfile: src/Microservices/Bookmark/BookmarkMicroservice.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - 11549:8080
    depends_on:
      postgres-bookmark:
        condition: service_started
      gateway-api:
        condition: service_started
      kafka:
        condition: service_started

  employee-microservice-api:
    container_name: employee-microservice-api
    image: ${DOCKER_REGISTRY-}employeemicroservice-api
    build:
      context: .
      dockerfile: src/Microservices/Employee/EmployeeMicroservice.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - 35124:8080
    depends_on:
      postgres-employee:
        condition: service_started
      gateway-api:
        condition: service_started
      kafka:
        condition: service_started

  employer-microservice-api:
    container_name: employer-microservice-api
    image: ${DOCKER_REGISTRY-}employermicroservice-api
    build:
      context: .
      dockerfile: src/Microservices/Employer/EmployerMicroservice.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - 35125:8080
    depends_on:
      postgres-employer:
        condition: service_started
      gateway-api:
        condition: service_started
      kafka:
        condition: service_started

  company-microservice-api:
    container_name: company-microservice-api
    image: ${DOCKER_REGISTRY-}companymicroservice-api
    build:
      context: .
      dockerfile: src/Microservices/Company/CompanyMicroservice.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - 35235:8080
    depends_on:
      postgres-company:
        condition: service_started
      gateway-api:
        condition: service_started
      kafka:
        condition: service_started

  vacancy-microservice-api:
    container_name: vacancy-microservice-api
    image: ${DOCKER_REGISTRY-}vacancymicroservice-api
    build:
      context: .
      dockerfile: src/Microservices/Vacancy/VacancyMicroservice.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - 25912:8080
    depends_on:
      postgres-vacancy:
        condition: service_started
      gateway-api:
        condition: service_started
      kafka:
        condition: service_started

  resume-microservice-api:
    container_name: resume-microservice-api
    image: ${DOCKER_REGISTRY-}resumemicroservice-api
    build:
      context: .
      dockerfile: src/Microservices/Resume/ResumeMicroservice.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - 22983:8080
    depends_on:
      postgres-resume:
        condition: service_started
      gateway-api:
        condition: service_started
      kafka:
        condition: service_started

  postgres-bookmark:
    container_name: postgres-bookmark
    image: postgres:latest
    expose:
      - 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: JobFinderBookmarkMicroservice
    volumes: 
      - postgres-bookmark-data:/var/lib/postgresql/data

  postgres-resume:
    container_name: postgres-resume
    image: postgres:latest
    expose:
      - 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: JobFinderResumeMicroservice
    volumes: 
      - postgres-resume-data:/var/lib/postgresql/data

  postgres-vacancy:
    container_name: postgres-vacancy
    image: postgres:latest
    expose:
      - 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: JobFinderVacancyMicroservice
    volumes: 
      - postgres-vacancy-data:/var/lib/postgresql/data

  postgres-company:
    container_name: postgres-company
    image: postgres:latest
    expose:
      - 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: JobFinderCompanyMicroservice
    volumes: 
      - postgres-company-data:/var/lib/postgresql/data

  postgres-employer:
    container_name: postgres-employer
    image: postgres:latest
    expose:
      - 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: JobFinderEmployerMicroservice
    volumes: 
      - postgres-employer-data:/var/lib/postgresql/data

  postgres-account:
    container_name: postgres-account
    image: postgres:latest
    expose:
      - 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: JobFinderAccountMicroservice
    volumes: 
      - postgres-account-data:/var/lib/postgresql/data

  postgres-employee:
    container_name: postgres-employee
    image: postgres:latest
    expose:
      - 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: JobFinderEmployeeMicroservice
    volumes: 
      - postgres-employee-data:/var/lib/postgresql/data

  zookeeper:
    hostname: zookeeper
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - 10255:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka:9092"


volumes:
  postgres-account-data: {}
  postgres-employee-data: {}
  postgres-employer-data: {}
  postgres-company-data: {}
  postgres-vacancy-data: {}
  postgres-resume-data: {}
  postgres-bookmark-data: {}